services:
  postgres:
    image: postgres:16.2-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d database"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2.4-alpine
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"

  auth:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      UVICORN_PORT: "8001"
      DATABASE_URL: "postgresql://user:password@postgres:5432/database"
    command: bash -c "cd /app/auth_service && python -m uvicorn main:app --reload --port $UVICORN_PORT"
    ports:
      - "8001:8001"
    volumes:
      - ../auth_service:/app/auth_service
    depends_on:
      postgres:
        condition: service_healthy

  bot:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: bash -c "cd /app/frontend_auth && python bot.py"
    volumes:
      - ../frontend_auth:/app/frontend_auth
    depends_on:
      - auth
      - redis

  chat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: bash -c "cd /app/frontend_auth && streamlit run Чат.py --server.port=8501"
    ports:
      - "8501:8501"
    volumes:
      - ../frontend_auth:/app/frontend_auth
    depends_on:
      - auth

  order:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: bash -c "cd /app/user && streamlit run Заказать\!.py --server.port=8502"
    ports:
      - "8502:8502"
    volumes:
      - ../user:/app/user
    depends_on:
      - auth

volumes:
  pg_data:
  minio_data: