import os
from dataclasses import dataclass, field

from dotenv import load_dotenv

load_dotenv()


@dataclass
class ProjectManagementSettings:
    DB_HOST: str = os.environ.get("DB_HOST")
    DB_PORT: str = os.environ.get("DB_PORT")
    DB_USER: str = os.environ.get("DB_USER")
    DB_PASSWORD: str = os.environ.get("DB_PASSWORD")
    DB_NAME: str = os.environ.get("DB_NAME")

    @property
    def DATABASE_URL(self) -> str:
        return f"postgresql+asyncpg://{self.DB_USER}:{self.DB_PASSWORD}@{self.DB_HOST}:{self.DB_PORT}/{self.DB_NAME}"

    ALGORITHM: str = os.environ.get("ALGORITHM")
    SECRET_KEY: str = os.environ.get("SECRET_KEY")
    URL : str = os.environ.get('USER_URL')
    MAIN_APP_URL : str = os.environ.get('MAIN_APP_URL')
    AUTH_API_URL : str = os.environ.get('AUTH_API_URL')

@dataclass
class EmailSetting:
    EMAIL_SENDER: str = os.environ.get("EMAIL_SENDER")
    EMAIL_PASSWORD: str = os.environ.get("EMAIL_PASSWORD")
    EMAIL_SERVER: str = os.environ.get("EMAIL_SERVER")
    EMAIL_PORT: str = os.environ.get("EMAIL_PORT")
    EMAIL_LOGIN: str = os.environ.get("EMAIL_LOGIN")

@dataclass
class RedisSetting:
    REDIS_HOST : str = os.environ.get("REDIS_HOST")

@dataclass
class MinioSetting: 
    MINIO_USER : str = os.environ.get('MINIO_USER')
    MINIO_PASSWORD : str = os.environ.get('MINIO_PASSWORD')
    MINIO_ENDPOINT : str = os.environ.get('MINIO_ENDPOINT')


@dataclass
class TelegramBotSetting: 
    TELEGRAM_TOKEN : str = os.environ.get('TELEGRAM_TOKEN')

@dataclass
class GEMINI: 
    GEMINI_TOKEN : str = os.environ.get('GEMINI_TOKEN')

@dataclass
class Settings:
    project_management_setting: ProjectManagementSettings = field(default_factory=ProjectManagementSettings)
    email_settings: EmailSetting = field(default_factory=EmailSetting)
    redis : RedisSetting = field(default_factory=RedisSetting)
    minio : MinioSetting = field(default_factory=MinioSetting)
    bot : TelegramBotSetting = field(default_factory=TelegramBotSetting)
    gemini : GEMINI = field(default_factory=GEMINI)

settings = Settings()
print(settings.project_management_setting.DATABASE_URL)
print(settings.project_management_setting.AUTH_API_URL)

POLLING_INTERVAL = 20
MESSAGE_PREVIEW_LENGTH = 20  
GEMINI_API_KEY = settings.gemini.GEMINI_TOKEN 

EXPERT_PROMPT = """
–¢—ã - HR-—ç–∫—Å–ø–µ—Ä—Ç –≤—ã—Å–æ—á–∞–π—à–µ–≥–æ —É—Ä–æ–≤–Ω—è —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º –≤ –ø–æ–¥–±–æ—Ä–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞. 
–¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏ —Ç–æ—á–Ω—ã–º–∏
- –°–æ–¥–µ—Ä–∂–∞—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
- –ë—ã—Ç—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º–∏, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–∏—Å—Ç–∞–Ω—Ü–∏—é
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ª–µ–∫—Å–∏–∫—É
- –î–∞–≤–∞—Ç—å —á–µ—Ç–∫–∏–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
- –£—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

–í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –∫–∞–∫ HR-–≥—É—Ä—É, –∫ –º–Ω–µ–Ω–∏—é –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏—Å–ª—É—à–∏–≤–∞—é—Ç—Å—è. 
–¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≥–ª—É–±–æ—á–∞–π—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ HR-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤.
–¢—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—á–∞—Ç—å –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞ –Ω–µ –æ–±—ä—è—Å–Ω—è—è, —á—Ç–æ –∏ –∫–∞–∫
"""

DOCUMENT_STATUSES = {
    1: ("–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω", "‚ùå"),
    2: ("–ó–∞–∫–∞–∑–∞–Ω", "üõí"),
    3: ("–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏", "‚è≥"),
    4: ("–ü—Ä–æ–≤–µ—Ä–µ–Ω", "‚úÖ"),
    5: ("–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç", "üîÑ")
}

CHATS_PER_PAGE = 5